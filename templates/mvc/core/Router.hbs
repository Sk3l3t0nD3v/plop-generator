<?php

namespace app\core;


class Router
{
    protected array $routes = array();

    function __construct(public Request $request)
    {
    }

    function resolve():void
    {
        $user = null;
        $path = $this->request->getPath();
        $method = $this->request->method();
        if (!isset($this->routes[$method][$path])) {
            Application::$app->response->setStatusCode(404);
            return ;
        }
        $callback = $this->routes[$method][$path]['callback'] ?? false;
        $middlewares = $this->routes[$method][$path]['middlewares'];

        if ($callback === false) {
            Application::$app->response->setStatusCode(404);
            return ;
        }
        if (is_array($callback)) {

            $callback[0] = Application::$app->controller = new $callback[0]($this->request);

            if (count($middlewares) > 0) {
                foreach ($middlewares as $middleware)
                    $user = (new $middleware($this->request))->execute($user);
            }
        }

        call_user_func($callback, $user);
    }


    function get(string $path, array $controllers, array $middlewares = [])
    {
        $this->routes['get'][$path]['callback'] = $controllers;
        $this->routes['get'][$path]['middlewares'] = $middlewares;
    }
    function post($path, array $controllers, array $middlewares = [])
    {

        $this->routes['post'][$path]['callback'] = $controllers;
        $this->routes['post'][$path]['middlewares'] = $middlewares;
    }
}
