<?php


namespace app\middlewares;

use app\core\JwtAuth;
use app\core\Middleware;
use app\core\Request;
use app\exceptions\AuthException;
use app\models\User;

class AuthMiddleware extends Middleware
{
    protected Request $request;

    /**
     * @param Request $request
     */
    function __construct(Request $request)
    {
        $this->request = $request;
    }

    /**
     * @throws AuthException
     */
    public function execute(User|null $user): User|AuthException
    {
        $auth = $this->isAuth($this->request->getHeader());

        if (!$auth) {
            throw new AuthException('Not authenticated');
            exit();
        }
        $user = $user ?? new User();

        $user->userId = (int)$auth['id'];

        return $user;
    }

    public function isAuth($headers)
    {
        $token = $this->checkHeaderAuth($headers);
        return $token ? JwtAuth::isAuth($token[1]) : false;
    }

    function checkHeaderAuth($headers): array|bool
    {
        if (
            isset($headers['Authorization']) &&
            $headers['Authorization'] !== "undefined" &&
            preg_match('/Bearer\s(\S+)/', $headers['Authorization'], $token)
        )

            return $token;
        return false;
    }
}
